name: Plugin Install

on: [push, pull_request, workflow_dispatch]

jobs:

  linux-install:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build
        run: ./gradlew clean assemble -Dbuild.snapshot=false

      - name: Download OpenSearch Core
        run: |
          opensearch_version=`./gradlew properties -q | grep "opensearch_version:" | awk '{print $2}' | sed 's/-SNAPSHOT//g'`
          wget https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/$opensearch_version/latest/linux/x64/tar/builds/opensearch/dist/opensearch-min-$opensearch_version-linux-x64.tar.gz
          tar -xzf opensearch-*.tar.gz
          rm -f opensearch-*.tar.gz

      - name: Move and rename security plugin for installation
        run: mv build/distributions/opensearch-security-*.zip opensearch-security.zip

      - name: Run OpenSearch with plugin
        run: |
          cat > os-ep.sh <<EOF
          yes | opensearch-plugin install file:///docker-host/security-plugin.zip
          chmod +x plugins/opensearch-security/tools/install_demo_configuration.sh
          yes | plugins/opensearch-security/tools/install_demo_configuration.sh
          chown 1001:1001 -R /opensearch
          su -c "/opensearch/bin/opensearch" -s /bin/bash opensearch
          EOF
          docker build -t opensearch-test:latest -f- . <<EOF
          FROM ubuntu:latest
          COPY --chown=1001:1001 os-ep.sh /docker-host/
          COPY --chown=1001:1001 opensearch-security.zip /docker-host/security-plugin.zip
          COPY --chown=1001:1001 opensearch* /opensearch/
          RUN chmod +x /docker-host/os-ep.sh
          RUN useradd -u 1001 -s /sbin/nologin opensearch
          ENV PATH="/opensearch/bin:${PATH}"
          WORKDIR /opensearch/
          ENTRYPOINT /docker-host/os-ep.sh
          EOF
          docker run --name ops -d -p 9200:9200 -p 9600:9600 -i opensearch-test:latest

      - name: Sleep while OpenSearch finishes starting up
        uses: whatnick/wait-action@v0.1.2
        with:
          time: '30s'

      - name: Check OpenSearch Running
        run: curl -XGET https://localhost:9200 -u 'admin:admin' -k -v

      - name: Get Docker Logs
        if: always()
        run: docker logs ops

      - name: Run sanity tests
        run: ./gradlew integTestRemote -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername="opensearch" -Dhttps=true -Duser=admin -Dpassword=admin

  windows-install:

    runs-on: windows-latest

    steps:
      - name: Enable longer filenames for Windows
        run: git config --system core.longpaths true

      - name: Checkout Plugin
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download PAExec
        run: |
          choco install wget --no-progress 
          wget -q https://www.poweradmin.com/paexec/paexec.exe -P C:\Windows\System32

      - name: Download OpenSearch Core
        run: |
          Invoke-WebRequest https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/6322/windows/x64/zip/dist/opensearch/opensearch-3.0.0-windows-x64.zip -Outfile opensearch-3.0.0.zip
          tar -xzf opensearch-3.0.0.zip 
          del opensearch-3.0.0.zip
          echo $env:USERPROFILE
          Rename-Item opensearch-* Opensearch
          net user "opensearch" "P@ssw0rd" /add
          ls C:\Users
          move Opensearch $env:USERPROFILE

      - name: Build Security Plugin with Gradle
        run: |
          .\gradlew.bat assemble
        env:
          _JAVA_OPTIONS: -Xmx4096M

      - name: Move and rename security plugin
        run: |
          move build\distributions\opensearch-security-*.zip $env:USERPROFILE\opensearch-security.zip

      - name: Install the plugin
        run: |
          cd $env:USERPROFILE
          ls .
          'y' | .\Opensearch\bin\opensearch-plugin.bat remove opensearch-security
          del .\Opensearch\config\opensearch.yml
          New-Item .\Opensearch\config\opensearch.yml -type file
          'y' | .\Opensearch\bin\opensearch-plugin.bat install file:"$env:USERPROFILE\opensearch-security.zip"
          'y', 'y', 'N' | .\Opensearch\plugins\opensearch-security\tools\install_demo_configuration.bat

      - name: Run OpenSearch with plugin
        run: |
          ls $env:USERPROFILE
          echo $env:USERPROFILE
          $Acl = Get-Acl "$env:USERPROFILE"

          $Ar = New-Object System.Security.AccessControl.FileSystemAccessRule("opensearch", "FullControl", "Allow")

          $Acl.SetAccessRule($Ar)
          Set-Acl "$env:USERPROFILE" $Acl
          mkdir $env:USERPROFILE\Opensearch\logs
          New-Item $env:USERPROFILE\Opensearch\logs\opensearch.log -type file
          New-Item $env:USERPROFILE\Opensearch\logs\paexec.log -type file
          cmdkey.exe /add:"$env:COMPUTERNAME" /user:opensearch /pass:"P@ssw0rd"
          Rename-Item -Path "$env:USERPROFILE\Opensearch\bin\opensearch.bat" -NewName "opensearch.cmd"
          paexec -u opensearch -p "P@ssw0rd" -lo $env:USERPROFILE\Opensearch\logs\paexec.log "$env:USERPROFILE\Opensearch\bin\opensearch.cmd"

      - name: Check the logs
        if: always()
        run: |
          ls $env:USERPROFILE\Opensearch\logs
          Get-Content $env:USERPROFILE\Opensearch\logs\paexec.log
          Get-Content $env:USERPROFILE\Opensearch\logs\opensearch.log

      - name: Sleep while OpenSearch finishes starting up
        run: |
          Start-Sleep -s 30
          ls $env:USERPROFILE\Opensearch\logs
          Get-Content $env:USERPROFILE\Opensearch\logs\opensearch.log

      - name: Check OpenSearch Running
        run: |
          $credentialBytes = [Text.Encoding]::ASCII.GetBytes("admin:admin")
          $encodedCredentials = [Convert]::ToBase64String($credentialBytes)
          $baseCredentials = "Basic $encodedCredentials"
          $Headers = @{ Authorization = $baseCredentials }
          Invoke-WebRequest -SkipCertificateCheck -Uri 'https://localhost:9200' -Headers $Headers
