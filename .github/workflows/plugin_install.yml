name: Plugin Install

on: [push, pull_request, workflow_dispatch]

jobs:
  plugin-install:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Checkout Branch
        uses: actions/checkout@v2

      - name: Assemble target plugin
        run: ./gradlew assemble


      - name: Create Setup Script for Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          cat > setup.sh <<'EOF'
          chmod +x $OPENSEARCH_HOME/plugins/opensearch-security/tools/install_demo_configuration.sh
          $OPENSEARCH_HOME/plugins/opensearch-security/tools/install_demo_configuration.sh -y
          chown -R opensearch $OPENSEARCH_HOME
          chmod 0700 $OPENSEARCH_HOME/config
          chmod 0600 $OPENSEARCH_HOME/config/kirk.pem
          chmod 0600 $OPENSEARCH_HOME/config/kirk-key.pem
          chmod 0600 $OPENSEARCH_HOME/config/esnode.pem
          chmod 0600 $OPENSEARCH_HOME/config/esnode-key.pem
          chmod 0600 $OPENSEARCH_HOME/config/root-ca.pem
          # echo plugins.security.unsupported.restapi.allow_securityconfig_modification: true >> $OPENSEARCH_HOME/config/opensearch.yml
          echo plugins.security.allow_default_init_securityindex: true >> $OPENSEARCH_HOME/config/opensearch.yml
          echo network.host: "0.0.0.0" >> $OPENSEARCH_HOME/config/opensearch.yml
          echo discovery.type: single-node >> $OPENSEARCH_HOME/config/opensearch.yml
          EOF

      - name: Create Setup Script for Windows
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: |
          echo in Create script for windows
          ls
          echo path is 
          $pwd
          New-Item $pwd\setup.bat
          Add-Content setup.bat "echo 'yes', 'yes', 'No' ^| D:\a\${{ github.event.repository.name }}\${{ github.event.repository.name }}\opensearch-3.0.0-SNAPSHOT\plugins\opensearch-security\tools\install_demo_configuration.bat"

      - name: Run Opensearch with A Single Plugin
        uses: ./.github/actions/start-opensearch-with-one-plugin
        with:
          opensearch-version: 3.0.0
          plugin-name: opensearch-security
          plugin-setup-script: setup
          docker-host-plugin-zip: security-plugin.zip

      - name: Run sanity tests
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo useradd -u 10001 -s /sbin/nologin opensearch
          chown -R 10001 $GITHUB_WORKSPACE
          chmod -R u+rX $GITHUB_WORKSPACE
          su -m -c "GRADLE_USER_HOME=$GITHUB_WORKSPACE ./gradlew clean integTestRemote -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=opensearch -Dhttps=true -Duser=admin -Dpassword=admin" -s /bin/bash opensearch
